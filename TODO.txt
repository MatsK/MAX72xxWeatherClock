
Original is Qrome marquee scroller v3.0.3
	https://github.com/Qrome/marquee-scroller, last update Apr 30, 2024
Forked to rob040 LED matrix Clock
	https://github.com/rob040/LEDmatrixClock

TODO items
1. PRIO 1: get rid of TimeZoneDB registration requirement
   This req is not needed, as the Weather API supplies current timezone in seconds from UTC, and performs automatic DST changes, which makes conversion from country/city to TZ string and TZ string interpretation not needed.
   => DONE v3.1.4
2. Update OpenWeather API; new API key requests can no longer use the "GET /data/2.5/group?" request, but must use the current "GET /data/2.5/weather?" request. The returned json string is different and requires adaptation.
   => DONE v3.1.5 (OWM API) + v3.1.6 (OWM Client rework)
3. Reduce RAM usage; most static text and html is duplicated in RAM, most can be prevented
   There is only 80kB RAM in ESP8266
   => DONE v3.1.8  saves 6352 bytes RAM and 2728 bytes FLASH.
      There were some functional improvements as well
4. Add basic MQTT support (there is already PR#265 for this, which looks good as a start)
   => DONE v3.1.11
4.1 Add MQTT server username and password authentication and configuration
   => DONE v3.1.23
4.2 Add MQTT control of display brightness, display on/off,
4.3 publish some weather info,
4.4 pub statistical data,
4.5 pub debug help, like free heap, max allocatable block; to monitor memory fragmentation and memory leaks
5. Compile under PlatformIO / PIOarduino in VScode, perhaps saying goodbye to Arduino IDE (PIO provides control over used library versions, which is near impossible with Arduino IDE for different projects)
   => Done, Arduino IDE still supported
6. OpenWeatherMap only accepts 1 CityID and produces 1 current weather report: remove presumed flexibility here.
   => DONE
7. Fix naming like read/write 'CityIDs', 'handleLocations' 'GET /location', which are misnomers for __configuration__ update, save, restore
   => DONE v3.1.8
7.1 opening "http://<deviceIP>/location" will erase your configured configuration! Prevent this!
   -> now called /saveconfig
   -> todo in all /save* requests
   => DONE v3.1.9
8. Fix some idiosyncrasies, coding mis-style (uppercase variables, space between function name and its arguments, ...), TODO's
   => ongoing
9. Prioritize metric and SI-units as config defaults and select archaic colonial/imperial units as an option, same goes for 24h/12h clock. Get rid of 'military time'.
10. Go through list of issues and PRs of original repo and check which are 'solved' by this Fork
    may be provide PR's to Original repo, though the changes might be too large to be acceptable/merge-able
    => ongoing
11. make it compile and run on ESP32 variants
    => future (though it shouldnt be that hard, been there done that...) For me this is 'easy' reuse of some older HW, hence stick with ESP8266.
12. Adaptive brightness option; add LDR on ADC input and heavily filter for slow changes
13. make it possible to show alternate display (temperature) statically (without scrolling), alternating with time, like 10s temperature, 50s time
    => DONE v1.3.19 (disable all display options will leave temperature, which is statically shown for 10s, which is quite long)
13.1 make display functions showing time, scrolling message, static temperature display re-entrant from loop,
    e.g. call scroll message for every pixel shift, call show time for every 1/2 second to blink center colon when enabled, etc
    This allows the webserver and OTA to be serviced within the loop, iso at 3-4 places, and should increase web service responsiveness.
14. Change from OWM city-ID to city/[state/]country or lat/lon coordinates or allow them all for maximum flexibility.
    The OWM geocoding-api will translate to lat/lon coordinates for weather requests.
15. Check which font type/file is used.
16. Add slider checkbox (see w3schools) (instead of oldfashioned checkboxes) to mainpage header for autorefresh and darkmode
16.1  How to preserve these settings in browser? cookie?
17. Enhance display off quiet period with options like {display off, dimmed, dimmed time + temp, dimmed only time}. Should we configure dimmed level as well?
18. Add local temperature sensor and show inside temperature. Support only a few I2C sensors. Caveat: here we might get requests like can you support this or that sensor....
19. Add Config option: "Flash System LED on Service Calls"; the blue onboard LED is quite bright, shining through the case and can be annoying.
20. config page rework; In general, create more logical order, it is a mess now.
20.1  group 'Display' items name 'LED display',
      ==> Done v3.1.25 All config page items are now re-grouped
20.2  move 'use metric' to bottom (point 9!),
      -> relocated to Data Display Settings group
20.3  rename 'Minutes Between Refresh Data' to 'Clock Sync / Weather Refresh (minutes)'
      and change NTP sync accordingly,
      => NTP sync fixed in v3.1.22
      ==> DONE  v3.1.25; now called 'Data refresh interval'
20.4  move 'Minutes Between Scrolling Data' to display items and rename to 'Display interval',
      ==> DONE  v3.1.25; now called 'Display Scrolling Data interval'
20.5  rename 'Flash : in the time' to 'Blink time colon',
      ==> Done v3.1.25
20.6  move 'marquee message' setting to 3rd line and name 'Scroll message',
      ==> Done v3.1.25
20.7  'Start time'/'End time' group in 'Quiet period' with start and end reversed + point 17,
      - later
20.8  Add config of display width (# of tiles, default 4, max 32?); rename numberOfHorizontalDisplays, add to R/W configuration,
      ==> Done v3.1.25
20.9  Add wide clock style config, different screen formats for 8+ tiles: HH:MM, HH:MM:SS, HH:MM *CF, HH:MM %RH, mm dd HH:MM,  HH:MM Www DD (12 chars! 8 tiles fit 10 chars! ,
      (There are smaller fonts, but everything in this code is assuming fixed size chars.)
      ==> Done v3.1.25; now there are 8 variants. No font change.
21. News headlines: Do not use newsapi.org, it is NOT free but costs 450 USD per __MONTH__ (5400 USD per annum)! rediculous pricing for this Indian company!

Future
- Change to use latest Arduino json V7 library. this makes the JsonStreamingParser and json buffer size calculation unnecessary.
- Add REST API for various controls
- Update webpage with json data; requires JS code
- Investigate if we can run without adafruit library
	https://github.com/markruys/arduino-Max72xxPanel/pull/7  BitBang and no Adafruit_GFX #7
	who defines the character map?
Major overhaul
+ html main page: store whole page as one big array and process it as a stream, search for $marker$. Have a table with markers matching a callable function that returns the replacement text. callback could be anon inline function. This should reduce the number of string operations and memory allocations considerably.
Alternatively, read base html from FS file, then size is even less important. What is file read performance? serve own css as file?
+ main loop: have a executive like structure, with all process functions return in limited time.

